package org.drools.fipa;

import gov.hhs.fha.nhinc.adapter.fact.*;
import java.util.*;
import org.drools.base.DroolsQuery;


declare EMRToken
    id : String
end

declare InteractionTicket
    id              : String
    interactions    : List      // <Interaction>
end


declare Interaction
    type            : String
    receivers       : List      // <String>
end


declare FormMarker
    ticketId        : String
    type            : String
    formId          : String
end

declare Alert
@role( event )
    ticketId        : String
    destination     : String
    formId          : String
end




declare Progress
@role( event )
    formId          : String
    percentage      : int
end





query formMarker( String $ticketId, String $type, String $formId )
    FormMarker( $ticketId, $type, $formId ; )
end


rule "Interactions"
when
    $ticket : InteractionTicket( $id : id,
                                 $inters : interactions )
    Interaction( $type : type, receivers.size > 0, $receiver : receivers[0] ) from $inters
    formMarker( $id, $type, $formId ; )
then
    System.out.println(" Form is ready " + $formId );
    insert( new Alert( $id, $receiver.toString(), $formId ) );
end



rule "Alert"
when
    $al : Alert( $id, $dest, $formId ; )
then
    System.out.println( " ******************************* " + $al );
end


//rule "See"
//when
//    $ticket : InteractionTicket( $id : id,
//                                 $inters : interactions )
//    $inter : Interaction( $type, $receivers ;) from $inters
//    FormMarker( $id, $type, $formId ; )
//    $al : Alert( $id, $dest, $formId ; destination memberOf $receivers )
//then
//    <![ ece[
//        expect Complete( $formId, 100 ; this after[0,1s] $al )
//        onFulfill {
//
//        }
//        onViolation {
//            $receivers.remove( $dest );
//            update( $ticket );
//        }
//    ]]>
//end





rule "formMarker_opp : Crate form as needed"
when
    DroolsQuery( name == "formMarker", $args : elements )
    not FormMarker( $args[0], $args[1] ; )
then
    System.out.println(" Will create a form for " + $args[0] + " / " + $args[1] );
    String formId = java.util.UUID.randomUUID().toString();

    // create Form here

    insert( new Progress( formId, 0 ) );
    insert( new FormMarker( $args[0].toString(),
                            $args[1].toString(),
                            formId ) );
end







