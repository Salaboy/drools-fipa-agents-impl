package org.drools.test;


import org.drools.fipa.body.content.Action;

import org.drools.pmml_4_0.ModelMarker;




declare RiskThreshold
    modelId     : String        @key
    threshold   : int
end


query getRiskThreshold( String $modelId, int $thold, RiskThreshold $holder )
    holder := RiskThreshold( $modelId, $thold ; )
end


rule "Action_Request : setRiskThreshold"
when
    $a : Action( actionName == "setRiskThreshold",
                 $patientId : this["patientId"],
                 $modelId : this["modelId"],
                 $value : this["threshold"]
               )
    $h : RiskThreshold( $modelId, $prevThold ; )
then
    retract( $a );
    $h.setThreshold( Integer.valueOf( (String) $value ) );
    update($h);
end

rule "Action_Request : setRiskThreshold II"
when
    $a : Action( actionName == "setRiskThreshold",
                 $patientId : this["patientId"],
                 $modelId : this["modelId"],
                 $value : this["threshold"]
               )
    not  RiskThreshold( $modelId, $prevThold ; )
then
    retract( $a );
end






rule "Support Threshold"
when
    ModelMarker( $mid : modelName );
    not RiskThreshold( modelId == $mid )
then
    insert( new RiskThreshold( $mid, 50 ) );
end

rule "Clean Threshold"
when
    $risk : RiskThreshold( $mid : modelId )
    not ModelMarker( modelName == $mid )
then
    retract( $risk );
end


query setRiskThreshold( String $patientId, String $modelId, String $threshold, int $return )
    RiskThreshold( $modelId, $return ; )
end
