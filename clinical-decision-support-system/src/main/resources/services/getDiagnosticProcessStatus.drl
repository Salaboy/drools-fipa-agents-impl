package org.drools.test;


import org.drools.fipa.body.content.Action;
import org.kmr2.decision.*;




rule "Action_Request : getDiagnosticProcessStatus"
when
    $a : Action( actionName == "getDiagnosticProcessStatus",
                 $userId      : this["userId"],
                 $patientId   : this["patientId"],
                 $processId   : this["dxProcessId"],
                 $refresh     : this["forceRefresh"]
                )
then
    System.out.println(" GET STATUS for " + $processId );
    retract( $a );
end


rule "Update State on complete"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status == "Complete" || == "Cancel" )
then
    System.out.println("Process complete/cancelled, no advance");
    $dx.setCanAdvance( false );
end


rule "Update State by action I"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status != "Complete" && != "Cancel", $steps : diagnosticProcessHistory )
          DxDecision( current == true, this memberOf $steps, $acts : actions )
          not DxAction( this memberOf $acts, status == "Started" || == "Committed" )
then
    System.out.println("Here we advance");
    $dx.setCanAdvance( true );
end

rule "Update State by action II"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status != "Complete" && != "Cancel", $steps : diagnosticProcessHistory )
          DxDecision( current == true, this memberOf $steps, $acts : actions )
          exists( DxAction( this memberOf $acts, status == "Started" || == "Committed" ) )
then
    System.out.println("Pending action, no advance");
    $dx.setCanAdvance( false );
end




query getDiagnosticProcessStatus( String $userId, String $patientId, String $dxProcessId, boolean $refresh, DiagnosticGuideProcess $return )
    $return := DiagnosticGuideProcess( id == $dxProcessId )
end
